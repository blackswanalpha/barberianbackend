# Barberian API Testing Collection

This document provides a comprehensive guide for testing all the APIs in the Barberian application using Postman.

## Setup Instructions

1. Import this collection into Postman
2. Create an environment with the following variables:
   - `base_url`: The base URL of your API (e.g., http://localhost:5000)
   - `token`: Will be automatically set after login
   - `refresh_token`: Will be automatically set after login

## Authentication Flow

### 1. Register a New User

**Request:**
```
POST {{base_url}}/api/auth/register/
Content-Type: application/json

{
  "email": "test@example.com",
  "password": "securepassword123",
  "password2": "securepassword123",
  "first_name": "Test",
  "last_name": "User",
  "phone_number": "+1234567890",
  "role": "client"
}
```

### 2. Login (Get Token)

**Request:**
```
POST {{base_url}}/api/auth/token/
Content-Type: application/json

{
  "email": "test@example.com",
  "password": "securepassword123"
}
```

**Tests Script:**
```javascript
// Save the tokens to environment variables
var jsonData = pm.response.json();
pm.environment.set("token", jsonData.access);
pm.environment.set("refresh_token", jsonData.refresh);
```

### 3. Refresh Token

**Request:**
```
POST {{base_url}}/api/auth/token/refresh/
Content-Type: application/json

{
  "refresh": "{{refresh_token}}"
}
```

**Tests Script:**
```javascript
// Update the access token
var jsonData = pm.response.json();
pm.environment.set("token", jsonData.access);
```

### 4. Logout

**Request:**
```
POST {{base_url}}/api/auth/logout/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "refresh": "{{refresh_token}}"
}
```

**Tests Script:**
```javascript
// Clear the tokens
pm.environment.unset("token");
pm.environment.unset("refresh_token");
```

## User Profile Management

### 1. Get User Profile

**Request:**
```
GET {{base_url}}/api/auth/user/profile/
Authorization: Bearer {{token}}
```

### 2. Change Password

**Request:**
```
POST {{base_url}}/api/auth/user/change-password/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "old_password": "securepassword123",
  "new_password": "newsecurepassword123",
  "new_password2": "newsecurepassword123"
}
```

## Admin API Endpoints

### User Management

#### 1. List All Users

**Request:**
```
GET {{base_url}}/api/admin/users/
Authorization: Bearer {{token}}
```

#### 2. Get User Details

**Request:**
```
GET {{base_url}}/api/admin/users/1/
Authorization: Bearer {{token}}
```

#### 3. Create New User

**Request:**
```
POST {{base_url}}/api/admin/users/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "email": "newuser@example.com",
  "password": "securepassword123",
  "password2": "securepassword123",
  "first_name": "New",
  "last_name": "User",
  "phone_number": "+1234567890",
  "role": "staff",
  "is_active": true
}
```

#### 4. Update User

**Request:**
```
PUT {{base_url}}/api/admin/users/1/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "first_name": "Updated",
  "last_name": "User",
  "phone_number": "+1234567890",
  "role": "staff",
  "is_active": true
}
```

#### 5. Activate User

**Request:**
```
POST {{base_url}}/api/admin/users/1/activate/
Authorization: Bearer {{token}}
```

#### 6. Deactivate User

**Request:**
```
POST {{base_url}}/api/admin/users/1/deactivate/
Authorization: Bearer {{token}}
```

### Staff Management

#### 1. List All Staff

**Request:**
```
GET {{base_url}}/api/admin/staff/
Authorization: Bearer {{token}}
```

#### 2. Get Staff Details

**Request:**
```
GET {{base_url}}/api/admin/staff/1/
Authorization: Bearer {{token}}
```

### Client Management

#### 1. List All Clients

**Request:**
```
GET {{base_url}}/api/admin/clients/
Authorization: Bearer {{token}}
```

#### 2. Get Client Details

**Request:**
```
GET {{base_url}}/api/admin/clients/1/
Authorization: Bearer {{token}}
```

### Category Management

#### 1. List All Categories

**Request:**
```
GET {{base_url}}/api/admin/categories/
Authorization: Bearer {{token}}
```

#### 2. Get Category Details

**Request:**
```
GET {{base_url}}/api/admin/categories/1/
Authorization: Bearer {{token}}
```

#### 3. Create New Category

**Request:**
```
POST {{base_url}}/api/admin/categories/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Haircuts",
  "description": "All types of haircuts",
  "icon": "scissors"
}
```

#### 4. Update Category

**Request:**
```
PUT {{base_url}}/api/admin/categories/1/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Premium Haircuts",
  "description": "All types of premium haircuts",
  "icon": "star-scissors"
}
```

#### 5. Delete Category

**Request:**
```
DELETE {{base_url}}/api/admin/categories/1/
Authorization: Bearer {{token}}
```

### Service Management

#### 1. List All Services

**Request:**
```
GET {{base_url}}/api/admin/services/
Authorization: Bearer {{token}}
```

#### 2. Get Service Details

**Request:**
```
GET {{base_url}}/api/admin/services/1/
Authorization: Bearer {{token}}
```

#### 3. Create New Service

**Request:**
```
POST {{base_url}}/api/admin/services/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Regular Haircut",
  "description": "Standard haircut with scissors",
  "price": 25.00,
  "duration": 30,
  "category": 1,
  "is_active": true
}
```

#### 4. Update Service

**Request:**
```
PUT {{base_url}}/api/admin/services/1/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Premium Haircut",
  "description": "Premium haircut with styling",
  "price": 35.00,
  "duration": 45,
  "category": 1,
  "is_active": true
}
```

#### 5. Delete Service

**Request:**
```
DELETE {{base_url}}/api/admin/services/1/
Authorization: Bearer {{token}}
```

### Appointment Management

#### 1. List All Appointments

**Request:**
```
GET {{base_url}}/api/admin/appointments/
Authorization: Bearer {{token}}
```

#### 2. Get Today's Appointments

**Request:**
```
GET {{base_url}}/api/admin/appointments/today/
Authorization: Bearer {{token}}
```

#### 3. Get Appointment Details

**Request:**
```
GET {{base_url}}/api/admin/appointments/1/
Authorization: Bearer {{token}}
```

#### 4. Cancel Appointment

**Request:**
```
POST {{base_url}}/api/admin/appointments/1/cancel/
Authorization: Bearer {{token}}
```

### Business Settings

#### 1. Get Business Settings

**Request:**
```
GET {{base_url}}/api/admin/settings/
Authorization: Bearer {{token}}
```

#### 2. Update Business Settings

**Request:**
```
PUT {{base_url}}/api/admin/settings/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "business_name": "Barberian",
  "address": "123 Main St, Anytown, USA",
  "phone": "+1234567890",
  "email": "contact@barberian.com",
  "logo_url": "https://example.com/logo.png",
  "about": "Premium barber shop services",
  "facebook_url": "https://facebook.com/barberian",
  "instagram_url": "https://instagram.com/barberian",
  "twitter_url": "https://twitter.com/barberian"
}
```

### Business Hours

#### 1. List Business Hours

**Request:**
```
GET {{base_url}}/api/admin/business-hours/
Authorization: Bearer {{token}}
```

#### 2. Update Business Hours

**Request:**
```
PUT {{base_url}}/api/admin/business-hours/1/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "is_open": true,
  "opening_time": "09:00:00",
  "closing_time": "18:00:00"
}
```

### Holiday Management

#### 1. List Holidays

**Request:**
```
GET {{base_url}}/api/admin/holidays/
Authorization: Bearer {{token}}
```

#### 2. Get Holiday Details

**Request:**
```
GET {{base_url}}/api/admin/holidays/1/
Authorization: Bearer {{token}}
```

#### 3. Create Holiday

**Request:**
```
POST {{base_url}}/api/admin/holidays/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Christmas",
  "date": "2025-12-25",
  "is_recurring": true
}
```

#### 4. Update Holiday

**Request:**
```
PUT {{base_url}}/api/admin/holidays/1/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Christmas Day",
  "date": "2025-12-25",
  "is_recurring": true
}
```

#### 5. Delete Holiday

**Request:**
```
DELETE {{base_url}}/api/admin/holidays/1/
Authorization: Bearer {{token}}
```

### Reports

#### 1. Dashboard

**Request:**
```
GET {{base_url}}/api/admin/dashboard/
Authorization: Bearer {{token}}
```

#### 2. Staff Performance Report

**Request:**
```
GET {{base_url}}/api/admin/reports/staff-performance/
Authorization: Bearer {{token}}
```

#### 3. Service Analysis Report

**Request:**
```
GET {{base_url}}/api/admin/reports/service-analysis/
Authorization: Bearer {{token}}
```

#### 4. Appointment Metrics Report

**Request:**
```
GET {{base_url}}/api/admin/reports/appointment-metrics/
Authorization: Bearer {{token}}
```

### SMS Notifications

#### 1. List SMS Notifications

**Request:**
```
GET {{base_url}}/api/admin/sms-notifications/
Authorization: Bearer {{token}}
```

#### 2. Get SMS Notification Details

**Request:**
```
GET {{base_url}}/api/admin/sms-notifications/1/
Authorization: Bearer {{token}}
```

#### 3. Send SMS Notification

**Request:**
```
POST {{base_url}}/api/admin/sms-notifications/send/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "phone_number": "+1234567890",
  "message": "Your appointment has been confirmed.",
  "recipient_id": 1,
  "notification_type": "manual"
}
```

#### 4. Update SMS Status

**Request:**
```
POST {{base_url}}/api/admin/sms-notifications/update-status/
Authorization: Bearer {{token}}
```

## Staff API Endpoints

### Schedule Management

#### 1. List Staff Schedules

**Request:**
```
GET {{base_url}}/api/staff/schedules/
Authorization: Bearer {{token}}
```

#### 2. Create Schedule

**Request:**
```
POST {{base_url}}/api/staff/schedules/create/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "date": "2025-05-01",
  "start_time": "09:00",
  "end_time": "17:00",
  "is_available": true
}
```

#### 3. Get Schedule Details

**Request:**
```
GET {{base_url}}/api/staff/schedules/1/
Authorization: Bearer {{token}}
```

#### 4. Update Schedule

**Request:**
```
PUT {{base_url}}/api/staff/schedules/1/update/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "date": "2025-05-01",
  "start_time": "10:00",
  "end_time": "18:00",
  "is_available": true
}
```

#### 5. Delete Schedule

**Request:**
```
DELETE {{base_url}}/api/staff/schedules/1/delete/
Authorization: Bearer {{token}}
```

### Appointment Management

#### 1. List Staff Appointments

**Request:**
```
GET {{base_url}}/api/staff/appointments/
Authorization: Bearer {{token}}
```

#### 2. Get Today's Appointments

**Request:**
```
GET {{base_url}}/api/staff/appointments/today/
Authorization: Bearer {{token}}
```

#### 3. Get Upcoming Appointments

**Request:**
```
GET {{base_url}}/api/staff/appointments/upcoming/
Authorization: Bearer {{token}}
```

#### 4. Get Appointment Details

**Request:**
```
GET {{base_url}}/api/staff/appointments/1/
Authorization: Bearer {{token}}
```

#### 5. Update Appointment Status

**Request:**
```
POST {{base_url}}/api/staff/appointments/1/status/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "status": "confirmed"
}
```

### Service Browsing

**Request:**
```
GET {{base_url}}/api/staff/services/
Authorization: Bearer {{token}}
```

### Profile Management

#### 1. Get Staff Profile

**Request:**
```
GET {{base_url}}/api/staff/profile/
Authorization: Bearer {{token}}
```

#### 2. Update Staff Profile

**Request:**
```
PUT {{base_url}}/api/staff/profile/update/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "first_name": "John",
  "last_name": "Doe",
  "phone_number": "+1234567890"
}
```

#### 3. Toggle Availability

**Request:**
```
POST {{base_url}}/api/staff/availability/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "date": "2025-05-01",
  "is_available": true
}
```

### Notification Management

**Request:**
```
GET {{base_url}}/api/staff/notifications/
Authorization: Bearer {{token}}
```

## Client API Endpoints

### Service Browsing

#### 1. List Services

**Request:**
```
GET {{base_url}}/api/client/services/
Authorization: Bearer {{token}}
```

#### 2. Get Service Details

**Request:**
```
GET {{base_url}}/api/client/services/1/
Authorization: Bearer {{token}}
```

### Category Browsing

**Request:**
```
GET {{base_url}}/api/client/categories/
Authorization: Bearer {{token}}
```

### Staff Browsing

#### 1. List Staff

**Request:**
```
GET {{base_url}}/api/client/staff/
Authorization: Bearer {{token}}
```

#### 2. Get Staff Details

**Request:**
```
GET {{base_url}}/api/client/staff/1/
Authorization: Bearer {{token}}
```

#### 3. Check Staff Availability

**Request:**
```
GET {{base_url}}/api/client/staff/1/availability/?date=2025-05-01
Authorization: Bearer {{token}}
```

### Appointment Management

#### 1. List Client Appointments

**Request:**
```
GET {{base_url}}/api/client/appointments/
Authorization: Bearer {{token}}
```

#### 2. Create Appointment

**Request:**
```
POST {{base_url}}/api/client/appointments/create/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "staff": 1,
  "service": 1,
  "start_time": "2025-05-01T10:00:00Z",
  "notes": "First time client"
}
```

#### 3. Get Appointment Details

**Request:**
```
GET {{base_url}}/api/client/appointments/1/
Authorization: Bearer {{token}}
```

#### 4. Cancel Appointment

**Request:**
```
POST {{base_url}}/api/client/appointments/1/cancel/
Authorization: Bearer {{token}}
```

## Notification API Endpoints

#### 1. List Notifications

**Request:**
```
GET {{base_url}}/api/notifications/
Authorization: Bearer {{token}}
```

#### 2. Get Notification Details

**Request:**
```
GET {{base_url}}/api/notifications/1/
Authorization: Bearer {{token}}
```

#### 3. Mark Notification as Read

**Request:**
```
POST {{base_url}}/api/notifications/1/mark-read/
Authorization: Bearer {{token}}
```

#### 4. Mark All Notifications as Read

**Request:**
```
POST {{base_url}}/api/notifications/mark-all-read/
Authorization: Bearer {{token}}
```

#### 5. Delete Notification

**Request:**
```
DELETE {{base_url}}/api/notifications/1/delete/
Authorization: Bearer {{token}}
```

#### 6. Delete All Notifications

**Request:**
```
DELETE {{base_url}}/api/notifications/delete-all/
Authorization: Bearer {{token}}
```

### SMS Notifications (Admin Only)

#### 1. List SMS Notifications

**Request:**
```
GET {{base_url}}/api/notifications/sms/
Authorization: Bearer {{token}}
```

#### 2. Get SMS Notification Details

**Request:**
```
GET {{base_url}}/api/notifications/sms/1/
Authorization: Bearer {{token}}
```

#### 3. Send SMS

**Request:**
```
POST {{base_url}}/api/notifications/sms/send/
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "phone_number": "+1234567890",
  "message": "Your appointment has been confirmed.",
  "recipient_id": 1,
  "notification_type": "manual"
}
```

#### 4. Update SMS Status

**Request:**
```
POST {{base_url}}/api/notifications/sms/update-status/
Authorization: Bearer {{token}}
```

## Testing Workflow

1. Register a new user (or multiple users with different roles)
2. Login to get authentication tokens
3. Test the endpoints based on user roles:
   - Admin: Test all admin endpoints
   - Staff: Test staff endpoints
   - Client: Test client endpoints
4. Test notification endpoints
5. Logout

## Common HTTP Status Codes

- 200 OK: Request succeeded
- 201 Created: Resource created successfully
- 400 Bad Request: Invalid request data
- 401 Unauthorized: Authentication required
- 403 Forbidden: Insufficient permissions
- 404 Not Found: Resource not found
- 500 Internal Server Error: Server-side error
