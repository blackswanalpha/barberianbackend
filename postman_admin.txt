# Barberian Admin API Testing Collection

This document provides a comprehensive guide for testing all the admin API endpoints in the Barberian application using Postman.

## Setup Instructions

1. Import this collection into Postman
2. Create an environment with the following variables:
   - `base_url`: The base URL of your API (e.g., http://localhost:8000)
   - `admin_token`: Will be automatically set after admin login
   - `admin_refresh_token`: Will be automatically set after admin login

## Authentication Flow

### 1. Admin Login

**Request:**
```
POST {{base_url}}/api/auth/admin/login/
Content-Type: application/json

{
  "email": "admin@example.com",
  "password": "adminpassword123"
}
```

**Tests Script:**
```javascript
// Save the tokens to environment variables
var jsonData = pm.response.json();
pm.environment.set("admin_token", jsonData.access);
pm.environment.set("admin_refresh_token", jsonData.refresh);
```

### 2. Refresh Admin Token

**Request:**
```
POST {{base_url}}/api/auth/token/refresh/
Content-Type: application/json

{
  "refresh": "{{admin_refresh_token}}"
}
```

**Tests Script:**
```javascript
// Update the access token
var jsonData = pm.response.json();
pm.environment.set("admin_token", jsonData.access);
```

### 3. Admin Logout

**Request:**
```
POST {{base_url}}/api/auth/logout/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "refresh": "{{admin_refresh_token}}"
}
```

**Tests Script:**
```javascript
// Clear the tokens
pm.environment.unset("admin_token");
pm.environment.unset("admin_refresh_token");
```

## Admin Profile Management

### 1. Get Admin Profile

**Request:**
```
GET {{base_url}}/api/admin/profile/
Authorization: Bearer {{admin_token}}
```

### 2. Update Admin Profile

**Request:**
```
PUT {{base_url}}/api/admin/profile/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "email": "admin@example.com",
  "first_name": "Admin",
  "last_name": "User",
  "phone_number": "+1234567890",
  "bio": "System administrator"
}
```

### 3. Change Admin Password

**Request:**
```
POST {{base_url}}/api/admin/profile/change-password/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "old_password": "adminpassword123",
  "new_password": "newadminpassword123",
  "new_password2": "newadminpassword123"
}
```

## Dashboard and Reports

### 1. Get Dashboard Data

**Request:**
```
GET {{base_url}}/api/admin/dashboard/
Authorization: Bearer {{admin_token}}
```

### 2. Staff Performance Report

**Request:**
```
GET {{base_url}}/api/admin/reports/staff-performance/
Authorization: Bearer {{admin_token}}
```

### 3. Service Analysis Report

**Request:**
```
GET {{base_url}}/api/admin/reports/service-analysis/
Authorization: Bearer {{admin_token}}
```

### 4. Appointment Metrics Report

**Request:**
```
GET {{base_url}}/api/admin/reports/appointment-metrics/
Authorization: Bearer {{admin_token}}
```

### 5. Generate Custom Report

**Request:**
```
POST {{base_url}}/api/admin/reports/generate/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "report_type": "appointment_metrics",
  "parameters": {
    "period": "month"
  },
  "save_report": true,
  "name": "Monthly Appointment Metrics",
  "description": "Appointment metrics for the current month"
}
```

### 6. List Saved Reports

**Request:**
```
GET {{base_url}}/api/admin/reports/
Authorization: Bearer {{admin_token}}
```

### 7. Get Report Details

**Request:**
```
GET {{base_url}}/api/admin/reports/1/
Authorization: Bearer {{admin_token}}
```

### 8. Update Report

**Request:**
```
PUT {{base_url}}/api/admin/reports/1/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "name": "Updated Report Name",
  "description": "Updated report description",
  "is_favorite": true
}
```

### 9. Delete Report

**Request:**
```
DELETE {{base_url}}/api/admin/reports/1/
Authorization: Bearer {{admin_token}}
```

## User Log Management

### 1. List User Logs

**Request:**
```
GET {{base_url}}/api/admin/logs/
Authorization: Bearer {{admin_token}}
```

### 2. Filter User Logs by User

**Request:**
```
GET {{base_url}}/api/admin/logs/?user_id=4
Authorization: Bearer {{admin_token}}
```

### 3. Filter User Logs by Action

**Request:**
```
GET {{base_url}}/api/admin/logs/?action=login
Authorization: Bearer {{admin_token}}
```

### 4. Delete User Log

**Request:**
```
DELETE {{base_url}}/api/admin/logs/1/
Authorization: Bearer {{admin_token}}
```

## Staff Management

### 1. List All Staff

**Request:**
```
GET {{base_url}}/api/admin/staff/
Authorization: Bearer {{admin_token}}
```

### 2. Create New Staff

**Request:**
```
POST {{base_url}}/api/admin/staff/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "email": "newstaff@example.com",
  "password": "staffpassword123",
  "first_name": "New",
  "last_name": "Staff",
  "phone_number": "+1234567891",
  "specialization": "Haircuts",
  "bio": "Experienced barber with 5 years of experience",
  "is_active": true
}
```

### 3. Get Staff Details

**Request:**
```
GET {{base_url}}/api/admin/staff/5/
Authorization: Bearer {{admin_token}}
```

### 4. Update Staff

**Request:**
```
PUT {{base_url}}/api/admin/staff/5/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "email": "staff@example.com",
  "first_name": "Updated",
  "last_name": "Staff",
  "phone_number": "+1234567891",
  "specialization": "Premium Haircuts",
  "bio": "Experienced barber with 6 years of experience",
  "is_active": true
}
```

### 5. Activate Staff

**Request:**
```
POST {{base_url}}/api/admin/staff/5/activate/
Authorization: Bearer {{admin_token}}
```

### 6. Deactivate Staff

**Request:**
```
POST {{base_url}}/api/admin/staff/5/deactivate/
Authorization: Bearer {{admin_token}}
```

## Client Management

### 1. List All Clients

**Request:**
```
GET {{base_url}}/api/admin/clients/
Authorization: Bearer {{admin_token}}
```

### 2. Filter Clients by Active Status

**Request:**
```
GET {{base_url}}/api/admin/clients/?is_active=true
Authorization: Bearer {{admin_token}}
```

### 3. Search Clients

**Request:**
```
GET {{base_url}}/api/admin/clients/?search=john
Authorization: Bearer {{admin_token}}
```

### 4. Create New Client

**Request:**
```
POST {{base_url}}/api/admin/clients/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "email": "newclient@example.com",
  "password": "clientpassword123",
  "first_name": "New",
  "last_name": "Client",
  "phone_number": "+1234567893"
}
```

### 5. Get Client Details

**Request:**
```
GET {{base_url}}/api/admin/clients/3/
Authorization: Bearer {{admin_token}}
```

### 6. Update Client

**Request:**
```
PUT {{base_url}}/api/admin/clients/3/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "email": "updatedclient@example.com",
  "first_name": "Updated",
  "last_name": "Client",
  "phone_number": "+1234567893",
  "is_active": true
}
```

### 7. Delete Client

**Request:**
```
DELETE {{base_url}}/api/admin/clients/3/
Authorization: Bearer {{admin_token}}
```

## Category Management

### 1. List All Categories

**Request:**
```
GET {{base_url}}/api/admin/categories/
Authorization: Bearer {{admin_token}}
```

### 2. Create New Category

**Request:**
```
POST {{base_url}}/api/admin/categories/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "name": "Premium Services",
  "description": "High-end barbering services",
  "icon": "star"
}
```

### 3. Get Category Details

**Request:**
```
GET {{base_url}}/api/admin/categories/1/
Authorization: Bearer {{admin_token}}
```

### 4. Update Category

**Request:**
```
PUT {{base_url}}/api/admin/categories/1/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "name": "Updated Premium Services",
  "description": "Updated high-end barbering services",
  "icon": "diamond"
}
```

### 5. Delete Category

**Request:**
```
DELETE {{base_url}}/api/admin/categories/1/
Authorization: Bearer {{admin_token}}
```

## Service Management

### 1. List All Services

**Request:**
```
GET {{base_url}}/api/admin/services/
Authorization: Bearer {{admin_token}}
```

### 2. Create New Service

**Request:**
```
POST {{base_url}}/api/admin/services/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "name": "Premium Haircut",
  "description": "Luxury haircut with hot towel treatment",
  "price": 45.00,
  "duration": 45,
  "category": 1,
  "is_active": true
}
```

### 3. Get Service Details

**Request:**
```
GET {{base_url}}/api/admin/services/1/
Authorization: Bearer {{admin_token}}
```

### 4. Update Service

**Request:**
```
PUT {{base_url}}/api/admin/services/1/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "name": "Deluxe Premium Haircut",
  "description": "Luxury haircut with hot towel and facial treatment",
  "price": 55.00,
  "duration": 60,
  "category": 1,
  "is_active": true
}
```

### 5. Delete Service

**Request:**
```
DELETE {{base_url}}/api/admin/services/1/
Authorization: Bearer {{admin_token}}
```

## Media Management

### 1. List All Media Files

**Request:**
```
GET {{base_url}}/api/admin/media/
Authorization: Bearer {{admin_token}}
```

### 2. Filter Media by Type

**Request:**
```
GET {{base_url}}/api/admin/media/?media_type=image
Authorization: Bearer {{admin_token}}
```

### 3. Filter Media by Tags

**Request:**
```
GET {{base_url}}/api/admin/media/?tags=haircut,premium
Authorization: Bearer {{admin_token}}
```

### 4. Upload Media File

**Request:**
```
POST {{base_url}}/api/admin/media/
Authorization: Bearer {{admin_token}}
Content-Type: multipart/form-data

title: Haircut Showcase
description: Image showing our premium haircut style
media_type: image
tags: haircut,premium,showcase
file: [Select file]
```

### 5. Get Media File Details

**Request:**
```
GET {{base_url}}/api/admin/media/1/
Authorization: Bearer {{admin_token}}
```

### 6. Update Media File

**Request:**
```
PUT {{base_url}}/api/admin/media/1/
Authorization: Bearer {{admin_token}}
Content-Type: multipart/form-data

title: Updated Haircut Showcase
description: Updated image showing our premium haircut style
media_type: image
tags: haircut,premium,showcase,updated
```

### 7. Delete Media File

**Request:**
```
DELETE {{base_url}}/api/admin/media/1/
Authorization: Bearer {{admin_token}}
```

## Service Media Management

### 1. Add Media to Service

**Request:**
```
POST {{base_url}}/api/admin/services/1/media/
Authorization: Bearer {{admin_token}}
Content-Type: multipart/form-data

file: [Select file]
file_type: image
is_primary: true
```

### 2. Delete Service Media

**Request:**
```
DELETE {{base_url}}/api/admin/services/media/1/
Authorization: Bearer {{admin_token}}
```

## Appointment Management

### 1. List All Appointments

**Request:**
```
GET {{base_url}}/api/admin/appointments/
Authorization: Bearer {{admin_token}}
```

### 2. Get Today's Appointments

**Request:**
```
GET {{base_url}}/api/admin/appointments/today/
Authorization: Bearer {{admin_token}}
```

### 3. Get Appointment Details

**Request:**
```
GET {{base_url}}/api/admin/appointments/1/
Authorization: Bearer {{admin_token}}
```

### 4. Create New Appointment

**Request:**
```
POST {{base_url}}/api/admin/appointments/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "client": 3,
  "staff": 5,
  "service": 1,
  "start_time": "2025-05-01T10:00:00Z",
  "notes": "VIP client"
}
```

### 5. Update Appointment

**Request:**
```
PUT {{base_url}}/api/admin/appointments/1/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "client": 3,
  "staff": 5,
  "service": 1,
  "start_time": "2025-05-01T11:00:00Z",
  "status": "confirmed",
  "notes": "Rescheduled VIP client"
}
```

### 6. Cancel Appointment

**Request:**
```
POST {{base_url}}/api/admin/appointments/1/cancel/
Authorization: Bearer {{admin_token}}
```

## Business Settings

### 1. Get Business Settings

**Request:**
```
GET {{base_url}}/api/admin/settings/
Authorization: Bearer {{admin_token}}
```

### 2. Update Business Settings

**Request:**
```
PUT {{base_url}}/api/admin/settings/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "business_name": "Barberian Premium",
  "address": "123 Main St, Anytown, USA",
  "phone": "+1234567890",
  "email": "contact@barberian.com",
  "logo_url": "https://example.com/logo.png",
  "about": "Premium barber shop services",
  "facebook_url": "https://facebook.com/barberian",
  "instagram_url": "https://instagram.com/barberian",
  "twitter_url": "https://twitter.com/barberian"
}
```

## Business Hours

### 1. List Business Hours

**Request:**
```
GET {{base_url}}/api/admin/business-hours/
Authorization: Bearer {{admin_token}}
```

### 2. Update Business Hours

**Request:**
```
PUT {{base_url}}/api/admin/business-hours/1/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "is_open": true,
  "opening_time": "09:00:00",
  "closing_time": "18:00:00"
}
```

## Holiday Management

### 1. List Holidays

**Request:**
```
GET {{base_url}}/api/admin/holidays/
Authorization: Bearer {{admin_token}}
```

### 2. Create Holiday

**Request:**
```
POST {{base_url}}/api/admin/holidays/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "name": "Christmas",
  "date": "2025-12-25",
  "is_recurring": true
}
```

### 3. Get Holiday Details

**Request:**
```
GET {{base_url}}/api/admin/holidays/1/
Authorization: Bearer {{admin_token}}
```

### 4. Update Holiday

**Request:**
```
PUT {{base_url}}/api/admin/holidays/1/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "name": "Christmas Day",
  "date": "2025-12-25",
  "is_recurring": true
}
```

### 5. Delete Holiday

**Request:**
```
DELETE {{base_url}}/api/admin/holidays/1/
Authorization: Bearer {{admin_token}}
```

## SMS Notifications

### 1. List SMS Notifications

**Request:**
```
GET {{base_url}}/api/admin/sms-notifications/
Authorization: Bearer {{admin_token}}
```

### 2. Get SMS Notification Details

**Request:**
```
GET {{base_url}}/api/admin/sms-notifications/1/
Authorization: Bearer {{admin_token}}
```

### 3. Send SMS Notification

**Request:**
```
POST {{base_url}}/api/admin/sms-notifications/send/
Authorization: Bearer {{admin_token}}
Content-Type: application/json

{
  "phone_number": "+1234567890",
  "message": "Your appointment has been confirmed.",
  "recipient_id": 3,
  "notification_type": "manual"
}
```

### 4. Update SMS Status

**Request:**
```
POST {{base_url}}/api/admin/sms-notifications/update-status/
Authorization: Bearer {{admin_token}}
```

## Testing Workflow

1. Login as admin to get authentication tokens
2. Test dashboard and reports endpoints
3. Test user management endpoints (staff, clients)
4. Test service management endpoints (categories, services)
5. Test appointment management endpoints
6. Test business settings endpoints
7. Test media management endpoints
8. Test notification endpoints
9. Logout

## Common HTTP Status Codes

- 200 OK: Request succeeded
- 201 Created: Resource created successfully
- 400 Bad Request: Invalid request data
- 401 Unauthorized: Authentication required
- 403 Forbidden: Insufficient permissions
- 404 Not Found: Resource not found
- 500 Internal Server Error: Server-side error
